{"paragraphs":[{"text":"%r\n# loading the data into RStudio. All the data with the dimension = ARQ.\nmarket_data <- read.csv(\"/Users/Mohamar/Documents/ARQ_Data_file.csv\", header=TRUE, sep=\",\")\nhead(market_data, 2)\nt(names(market_data))","user":"anonymous","dateUpdated":"2017-03-31T20:27:33-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"r"},"editorMode":"ace/mode/r","lineNumbers":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490484413864_-1880825185","id":"20170325-192653_1452833868","dateCreated":"2017-03-25T19:26:53-0400","dateStarted":"2017-03-31T20:27:33-0400","dateFinished":"2017-03-31T20:27:47-0400","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:159","errorMessage":""},{"text":"%r\n# for loop to estimate returns (as a single column) based on price: P(i)/P(i-1)\nreturns <- vector();\nfor(i in 2:length(market_data[,1]))\n{\n  if(identical(market_data[i,1], market_data[i-1,1]))\n  {\n    returns[i]=market_data[i,72]/market_data[i-1,72];\n  }\n  else {\n    returns[i]=0;\n  }\n}\n\nreturns[1]=0;\n\n# adding the returns column to the market_data\nmarket_data <- cbind(market_data,returns)\n\nhead(market_data, 2)\nt(names(market_data))","user":"anonymous","dateUpdated":"2017-03-31T20:27:56-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"r"},"editorMode":"ace/mode/r","lineNumbers":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490484712968_1859732626","id":"20170325-193152_39123268","dateCreated":"2017-03-25T19:31:52-0400","dateStarted":"2017-03-31T20:27:56-0400","dateFinished":"2017-03-31T20:28:22-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:160","errorMessage":""},{"text":"%r\ninstall.packages('tictoc', repos = 'http://cran.us.r-project.org')\nrequire(tictoc)\ntic()\n\n# for loop to estimate returns (as a single column) based on price: P(i)/P(i-1)\nreturns <- vector();\nfor(i in 2:length(market_data[,1]))\n{\n  if(identical(market_data[i,1], market_data[i-1,1]))\n  {\n    returns[i]=market_data[i,72]/market_data[i-1,72];\n  }\n  else {\n    returns[i]=0;\n  }\n}\n\nreturns[1]=0;\n\n# adding the returns column to the market_data\nmarket_data <- cbind(market_data,returns)\n\nhead(market_data, 2)\nt(names(market_data))\n\nexectime <- toc()\nexectime <- exectime$toc - exectime$tic\n","user":"anonymous","dateUpdated":"2017-03-31T21:00:12-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"r"},"editorMode":"ace/mode/r","lineNumbers":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1491006746324_-1982303735","id":"20170331-203226_1547986381","dateCreated":"2017-03-31T20:32:26-0400","dateStarted":"2017-03-31T20:35:41-0400","dateFinished":"2017-03-31T20:36:12-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:161","errorMessage":""},{"text":"%r\ntic()\n# selecting my 20 factors\nmarket_data.factors <- market_data[c(1,3,12,17,18,22,26,30,38,40,43,65,67,68,69,70,72,73,74,77,89,92,94)]\nhead(market_data.factors, 2)\nt(names(market_data.factors))\nexectime <- toc()\nexectime <- exectime$toc - exectime$tic","user":"anonymous","dateUpdated":"2017-03-31T20:39:35-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"r"},"editorMode":"ace/mode/r","lineNumbers":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490484765135_-1133958050","id":"20170325-193245_730610824","dateCreated":"2017-03-25T19:32:45-0400","dateStarted":"2017-03-31T20:39:35-0400","dateFinished":"2017-03-31T20:39:35-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:162","errorMessage":""},{"text":"%r\ntic()\n# for loop to estimate log of returns (as a single column) based on price: Pt/P(t-1)\nlogreturns <- vector();\nfor(i in 2:length(market_data.factors[,1]))\n  {\n    logreturns[i]=log(market_data.factors[i,23]);\n}\n\nhead(logreturns)\n\n# adding the logreturns column to the market_data\nmarket_data.factors <- cbind(market_data.factors,logreturns)\n\nhead(market_data.factors, 2)\nt(names(market_data.factors))\nexectime <- toc()\nexectime <- exectime$toc - exectime$tic","user":"anonymous","dateUpdated":"2017-03-31T21:00:24-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"r"},"editorMode":"ace/mode/r","lineNumbers":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490484801354_-1816640517","id":"20170325-193321_819360196","dateCreated":"2017-03-25T19:33:21-0400","dateStarted":"2017-03-31T20:40:32-0400","dateFinished":"2017-03-31T20:40:55-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:163","errorMessage":""},{"text":"%r\ntic()\n# replacing all 'Inf' in the data with NA\nmarket_data.factors[mapply(is.infinite, market_data.factors)] <- NA\nhead(market_data.factors)\n\n# removing all NAs\nmarket_data.factors.noNA <- na.omit(market_data.factors)\nhead(market_data.factors.noNA, 2)\nexectime <- toc()\nexectime <- exectime$toc - exectime$tic","user":"anonymous","dateUpdated":"2017-03-31T21:00:37-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"r"},"editorMode":"ace/mode/r","lineNumbers":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490484819665_1216365711","id":"20170325-193339_199477874","dateCreated":"2017-03-25T19:33:39-0400","dateStarted":"2017-03-31T20:42:50-0400","dateFinished":"2017-03-31T20:42:52-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:164","errorMessage":""},{"text":"%r\ntic()\n# Normalizing all 20 factors \n\nbvps_N <- (market_data.factors.noNA[,3] - mean(market_data.factors.noNA[,3]))/sd(market_data.factors.noNA[,3])\n\ncurrentratio_N <- (market_data.factors.noNA[,4] - mean(market_data.factors.noNA[,4]))/sd(market_data.factors.noNA[,4])\n\nde_N <- (market_data.factors.noNA[,5] - mean(market_data.factors.noNA[,5]))/sd(market_data.factors.noNA[,5])\n \ndivyield_N <- (market_data.factors.noNA[,6] - mean(market_data.factors.noNA[,6]))/sd(market_data.factors.noNA[,6])\n\nebitdamargin_N <- (market_data.factors.noNA[,7] - mean(market_data.factors.noNA[,7]))/sd(market_data.factors.noNA[,7])\n\neps_N <- (market_data.factors.noNA[,8] - mean(market_data.factors.noNA[,8]))/sd(market_data.factors.noNA[,8])\n\nevebitda_N <- (market_data.factors.noNA[,9] - mean(market_data.factors.noNA[,9]))/sd(market_data.factors.noNA[,9])\n\nfcfps_N <- (market_data.factors.noNA[,10] - mean(market_data.factors.noNA[,10]))/sd(market_data.factors.noNA[,10])\n\ngrossmargin_N <- (market_data.factors.noNA[,11] - mean(market_data.factors.noNA[,11]))/sd(market_data.factors.noNA[,11])\n\nnetmargin_N <- (market_data.factors.noNA[,12] - mean(market_data.factors.noNA[,12]))/sd(market_data.factors.noNA[,12])\n\npayoutratio_N <- (market_data.factors.noNA[,13] - mean(market_data.factors.noNA[,13]))/sd(market_data.factors.noNA[,13])\n\npb_N <- (market_data.factors.noNA[,14] - mean(market_data.factors.noNA[,14]))/sd(market_data.factors.noNA[,14])\n\npe_N <- (market_data.factors.noNA[,15] - mean(market_data.factors.noNA[,15]))/sd(market_data.factors.noNA[,15])\n\npe1_N <- (market_data.factors.noNA[,16] - mean(market_data.factors.noNA[,16]))/sd(market_data.factors.noNA[,16])\n\nprice_N <- (market_data.factors.noNA[,17] - mean(market_data.factors.noNA[,17]))/sd(market_data.factors.noNA[,17])\n\nps_N <- (market_data.factors.noNA[,18] - mean(market_data.factors.noNA[,18]))/sd(market_data.factors.noNA[,18])\n\nps1_N <- (market_data.factors.noNA[,19] - mean(market_data.factors.noNA[,19]))/sd(market_data.factors.noNA[,19])\n\nrevenue_N <- (market_data.factors.noNA[,20] - mean(market_data.factors.noNA[,20]))/sd(market_data.factors.noNA[,20])\n\nsps_N <- (market_data.factors.noNA[,21] - mean(market_data.factors.noNA[,21]))/sd(market_data.factors.noNA[,21])\n\ntbvps_N <- (market_data.factors.noNA[,22] - mean(market_data.factors.noNA[,22]))/sd(market_data.factors.noNA[,22])\nexectime <- toc()\nexectime <- exectime$toc - exectime$tic","user":"anonymous","dateUpdated":"2017-03-31T21:00:46-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"r"},"editorMode":"ace/mode/r","lineNumbers":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490484878587_488698272","id":"20170325-193438_611704718","dateCreated":"2017-03-25T19:34:38-0400","dateStarted":"2017-03-31T20:44:18-0400","dateFinished":"2017-03-31T20:44:18-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:165","errorMessage":""},{"text":"%r\ntic()\n# creating a data frame of all the normalized 20 factors\nmarket_data.factors.Norm <- data.frame(bvps_N, currentratio_N, de_N, divyield_N, ebitdamargin_N, eps_N, evebitda_N, fcfps_N, grossmargin_N, netmargin_N, payoutratio_N, pb_N, pe_N, pe1_N, price_N, ps_N, ps1_N, revenue_N, sps_N, tbvps_N)\n\n# cbinding columns 'calendardate', 'returns', and 'logreturns' to the normalized factors.\ncalendardate <- market_data.factors.noNA$calendardate\nreturns <- market_data.factors.noNA$returns\nlogreturns <- market_data.factors.noNA$logreturns\nticker <- market_data.factors.noNA$ticker\n\nmarket_data.factors.Norm_complete <- cbind(calendardate, market_data.factors.Norm, returns, logreturns)\nhead(market_data.factors.Norm_complete)\nexectime <- toc()\nexectime <- exectime$toc - exectime$tic","user":"anonymous","dateUpdated":"2017-03-31T21:00:56-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"r"},"editorMode":"ace/mode/r","lineNumbers":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490484907115_-865187135","id":"20170325-193507_1182649442","dateCreated":"2017-03-25T19:35:07-0400","dateStarted":"2017-03-31T20:45:38-0400","dateFinished":"2017-03-31T20:45:38-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:166","errorMessage":""},{"text":"%r\ntic()\n# finding out how many different date are there in the data\ndate <- split(market_data.factors.Norm_complete, as.factor(market_data.factors.Norm_complete$calendardate))\nlength(date) # there are 20 different calendar dates\n\n# extracting all data for a particular calendar date and assign each to a dataframe\nfunct3 <- split(market_data.factors.Norm_complete, market_data.factors.Norm_complete$calendardate)\nfactor_names <- c(\"n.market_data.factors_2011_03_31\", \"n.market_data.factors_2011_06_30\", \"n.market_data.factors_2011_09_30\", \"n.market_data.factors_2011_12_31\", \"n.market_data.factors_2012_03_31\", \"n.market_data.factors_2012_06_30\", \"n.market_data.factors_2012_09_30\", \"n.market_data.factors_2012_12_31\", \"n.market_data.factors_2013_03_31\", \"n.market_data.factors_2013_06_30\", \"n.market_data.factors_2013_09_30\", \"n.market_data.factors_2013_12_31\", \"n.market_data.factors_2014_03_31\", \"n.market_data.factors_2014_06_30\", \"n.market_data.factors_2014_09_30\", \"n.market_data.factors_2014_12_31\", \"n.market_data.factors_2015_03_31\", \"n.market_data.factors_2015_06_30\", \"n.market_data.factors_2015_09_30\", \"n.market_data.factors_2015_12_31\")\n\nfor (i in 1:length(funct3)) {\n  assign(factor_names[i], funct3[[i]])\n}\n\n# Verifying data for few calendar dates\nhead(n.market_data.factors_2011_09_30, 2)\nhead(n.market_data.factors_2013_03_31, 2)\nhead(n.market_data.factors_2011_12_31, 2)\nhead(n.market_data.factors_2014_06_30, 2)\nhead(n.market_data.factors_2015_09_30, 2)\n\nhead(n.market_data.factors_2011_06_30)\n\nhead(n.market_data.factors_2011_03_31)\nexectime <- toc()\nexectime <- exectime$toc - exectime$tic","user":"anonymous","dateUpdated":"2017-03-31T21:01:06-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"r"},"editorMode":"ace/mode/r","lineNumbers":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490484927665_1969489519","id":"20170325-193527_615905861","dateCreated":"2017-03-25T19:35:27-0400","dateStarted":"2017-03-31T20:46:48-0400","dateFinished":"2017-03-31T20:46:48-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:167","errorMessage":""},{"text":"%r\n# Using Neuralnet on logreturns on the 20 factors, for 75% of the dates. \n# I am using the first three quaters of years 2011 to 2015.\n\ninstall.packages('neuralnet', repos = 'http://cran.us.r-project.org')\nlibrary(neuralnet)","user":"anonymous","dateUpdated":"2017-03-31T21:01:19-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"r"},"editorMode":"ace/mode/r","lineNumbers":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490484949680_513245580","id":"20170325-193549_1661869047","dateCreated":"2017-03-25T19:35:49-0400","dateStarted":"2017-03-31T20:49:34-0400","dateFinished":"2017-03-31T20:49:35-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:168","errorMessage":""},{"text":"%r\ntic()\nnames(n.market_data.factors_2011_03_31)\n\n# creating a formula to be used with neuralnet\ncolnames <- names(n.market_data.factors_2011_03_31)\n# colnames %in% c(\"calendardate\", \"returns\",\"logreturns\")\n# !colnames %in% c(\"calendardate\", \"returns\",\"logreturns\")\n# paste(colnames[!colnames %in% c(\"calendardate\", \"returns\",\"logreturns\")])\n# paste(colnames[!colnames %in% c(\"calendardate\", \"returns\",\"logreturns\")], collapse = \" + \")\n# paste(\"logreturns ~\", paste(colnames[!colnames %in% c(\"calendardate\", \"returns\",\"logreturns\")], collapse = \" + \"))\n\nnn.formula <- as.formula(paste(\"logreturns ~\", paste(colnames[!colnames %in% c(\"calendardate\", \"returns\",\"logreturns\")], collapse = \" + \")))\nnn.formula\nexectime <- toc()\nexectime <- exectime$toc - exectime$tic","user":"anonymous","dateUpdated":"2017-03-31T21:01:29-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"r"},"editorMode":"ace/mode/r","lineNumbers":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490484973612_-215438188","id":"20170325-193613_665633643","dateCreated":"2017-03-25T19:36:13-0400","dateStarted":"2017-03-31T20:49:38-0400","dateFinished":"2017-03-31T20:49:38-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:169","errorMessage":""},{"text":"%r\ntic()\n# For 2011\nnn.model_2011_03_31 <- neuralnet(nn.formula, data=n.market_data.factors_2011_03_31, hidden=c(7,7), linear.output = T)\nplot(nn.model_2011_03_31)\n     \nweights_nn.model_2011_03_31 <- nn.model_2011_03_31$result.matrix\n\nView(weights_nn.model_2011_03_31)\nexectime <- toc()\nexectime <- exectime$toc - exectime$tic","user":"anonymous","dateUpdated":"2017-03-31T21:01:45-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"r"},"editorMode":"ace/mode/r","lineNumbers":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490485346648_1565299026","id":"20170325-194226_1505532485","dateCreated":"2017-03-25T19:42:26-0400","dateStarted":"2017-03-31T20:49:43-0400","dateFinished":"2017-03-31T20:49:49-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:170","errorMessage":""},{"text":"%r\n","user":"anonymous","dateUpdated":"2017-03-25T19:44:16-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"r"},"editorMode":"ace/mode/r"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490485456890_1555850514","id":"20170325-194416_631417658","dateCreated":"2017-03-25T19:44:16-0400","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:171"}],"name":"DS-670 Assignment 9 - Mohamed Mohamar","id":"2CCZBY9TM","angularObjects":{"2CC1EMJEB:shared_process":[],"2CAJTUFCM:shared_process":[],"2CDFPAYMM:shared_process":[],"2CBNHJVGJ:shared_process":[],"2CDGEUYQ3:shared_process":[],"2CC5715EW:shared_process":[],"2CD5JSE53:shared_process":[],"2CCPD5DTV:shared_process":[],"2CCPQMCKH:shared_process":[],"2CD7TC6BK:shared_process":[],"2CDBW39VU:shared_process":[],"2CA95KWGG:shared_process":[],"2CA5Y2RJY:shared_process":[],"2CAA9CM8V:shared_process":[],"2CBA7AX34:shared_process":[],"2CBUSCQQH:shared_process":[],"2CDR4SKQC:shared_process":[],"2CA4JJ8VB:shared_process":[],"2CCPNPF74:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}